<?xml version="1.0" encoding="UTF-8"?>
<!--
ao-fluent-html-any - Base abstract classes and interfaces for Fluent Java DSL for high-performance HTML generation.
Copyright (C) 2021  AO Industries, Inc.
    support@aoindustries.com
    7262 Bull Pen Cir
    Mobile, AL 36695

This file is part of ao-fluent-html-any.

ao-fluent-html-any is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

ao-fluent-html-any is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with ao-fluent-html-any.  If not, see <http://www.gnu.org/licenses />.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.aoapps</groupId><artifactId>ao-oss-parent</artifactId><version>1.17.1-POST-SNAPSHOT</version>
		<relativePath>../parent/pom.xml</relativePath>
	</parent>

	<groupId>com.aoapps</groupId><artifactId>ao-fluent-html-any</artifactId><version>0.5.1-SNAPSHOT</version>
	<packaging>bundle</packaging>

	<properties>
		<module.name>com.aoapps.html.any</module.name>
		<!-- Java 1.8 -->
		<javase.version>1.8</javase.version>
		<javase.release>8</javase.release>
		<javadoc.link.javase>${javadoc.link.javase.8}</javadoc.link.javase>
		<!-- This must be set in your ~/.m2/settings.xml when building with JDK < 9 -->
		<javase.bootclasspath>${javase.bootclasspath.8}</javase.bootclasspath>

		<javadoc.breadcrumbs><![CDATA[<a target="${javadoc.target}" href="https://oss.aoapps.com/">AO OSS</a>
/ <a target="${javadoc.target}" href="https://oss.aoapps.com/fluent-html/">Fluent HTML</a>
/ <a target="${javadoc.target}" href="${project.url}">Any</a>]]></javadoc.breadcrumbs>
		<!-- SonarQube -->
		<sonar.projectKey>${project.groupId}:${project.artifactId}</sonar.projectKey>
		<sonar.organization>aoindustries</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
	</properties>

	<name>AO Fluent HTML Any</name>
	<url>https://oss.aoapps.com/fluent-html/any/</url>
	<description>Base abstract classes and interfaces for Fluent Java DSL for high-performance HTML generation.</description>
	<inceptionYear>2021</inceptionYear>

	<licenses>
		<license>
			<name>GNU General Lesser Public License (LGPL) version 3.0</name>
			<url>https://www.gnu.org/licenses/lgpl-3.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<organization>
		<name>AO Industries, Inc.</name>
		<url>https://aoindustries.com/</url>
	</organization>

	<developers>
		<developer>
			<name>AO Industries, Inc.</name>
			<email>support@aoindustries.com</email>
			<url>https://aoindustries.com/</url>
			<organization>AO Industries, Inc.</organization>
			<organizationUrl>https://aoindustries.com/</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:git://github.com/aoindustries/ao-fluent-html-any.git</connection>
		<developerConnection>scm:git:git@github.com:aoindustries/ao-fluent-html-any.git</developerConnection>
		<url>https://github.com/aoindustries/ao-fluent-html-any</url>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<system>GitHub Issues</system>
		<url>https://github.com/aoindustries/ao-fluent-html-any/issues</url>
	</issueManagement>

	<ciManagement>
		<system>GitHub Actions</system>
		<url>https://github.com/aoindustries/ao-fluent-html-any/actions</url>
	</ciManagement>

	<repositories>
		<!-- Repository required here, too, so can find parent -->
		<repository>
			<id>sonatype-nexus-snapshots-s01</id>
			<name>Sonatype Nexus Snapshots S01</name>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<!-- Java 1.8: see https://maven.apache.org/plugins/maven-compiler-plugin/examples/module-info.html -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId><artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<!-- compile everything to ensure module-info contains right entries -->
					<execution>
						<id>default-compile</id>
						<configuration>
							<release>9</release>
						</configuration>
					</execution>
					<!-- recompile everything for target VM except the module-info.java -->
					<execution>
						<id>base-compile</id><goals><goal>compile</goal></goals>
						<configuration>
							<excludes>
								<exclude>module-info.java</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId><artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<!-- Java 1.8: generate future-proof modular javadocs -->
					<source>11</source>
					<release>11</release>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId><artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Cannot use module path due to additional test dependencies -->
					<useModulePath>false</useModulePath>
				</configuration>
			</plugin>
			<!-- Java 1.8 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId><artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<!-- Add tests as a secondary artifact -->
						<id>attach-tests</id><goals><goal>test-jar</goal></goals>
						<configuration>
							<archive>
								<manifestEntries>
									<Automatic-Module-Name>${module.name}.tests</Automatic-Module-Name>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>offlineLinks</id><activation><file><exists>src/main/java</exists></file></activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId><artifactId>maven-dependency-plugin</artifactId>
						<executions>
							<execution>
								<id>unpack.offlineLinks</id><phase>generate-sources</phase><goals><goal>unpack</goal></goals>
								<configuration>
									<artifactItems>
										<!-- Direct -->
										<artifactItem>
											<groupId>com.aoapps</groupId><artifactId>ao-collections</artifactId><classifier>javadoc</classifier>
											<includes>element-list, package-list</includes>
											<outputDirectory>${project.build.directory}/offlineLinks/com.aoapps/ao-collections</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.aoapps</groupId><artifactId>ao-encoding</artifactId><classifier>javadoc</classifier>
											<includes>element-list, package-list</includes>
											<outputDirectory>${project.build.directory}/offlineLinks/com.aoapps/ao-encoding</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.aoapps</groupId><artifactId>ao-hodgepodge</artifactId><classifier>javadoc</classifier>
											<includes>element-list, package-list</includes>
											<outputDirectory>${project.build.directory}/offlineLinks/com.aoapps/ao-hodgepodge</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>com.aoapps</groupId><artifactId>ao-lang</artifactId><classifier>javadoc</classifier>
											<includes>element-list, package-list</includes>
											<outputDirectory>${project.build.directory}/offlineLinks/com.aoapps/ao-lang</outputDirectory>
										</artifactItem>
										<!-- Test Direct -->
										<artifactItem>
											<groupId>org.apache.bcel</groupId><artifactId>bcel</artifactId><classifier>javadoc</classifier>
											<includes>element-list, package-list</includes>
											<outputDirectory>${project.build.directory}/offlineLinks/org.apache.bcel/bcel</outputDirectory>
										</artifactItem>
										<artifactItem>
											<groupId>junit</groupId><artifactId>junit</artifactId><classifier>javadoc</classifier>
											<includes>element-list, package-list</includes>
											<outputDirectory>${project.build.directory}/offlineLinks/junit/junit</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId><artifactId>maven-javadoc-plugin</artifactId>
						<configuration>
							<offlineLinks combine.children="append">
								<!-- Direct -->
								<offlineLink>
									<url>https://oss.aoapps.com/collections/apidocs/</url>
									<location>${project.build.directory}/offlineLinks/com.aoapps/ao-collections</location>
								</offlineLink>
								<offlineLink>
									<url>https://oss.aoapps.com/encoding/apidocs/</url>
									<location>${project.build.directory}/offlineLinks/com.aoapps/ao-encoding</location>
								</offlineLink>
								<offlineLink>
									<url>https://oss.aoapps.com/hodgepodge/apidocs/</url>
									<location>${project.build.directory}/offlineLinks/com.aoapps/ao-hodgepodge</location>
								</offlineLink>
								<offlineLink>
									<url>https://oss.aoapps.com/lang/apidocs/</url>
									<location>${project.build.directory}/offlineLinks/com.aoapps/ao-lang</location>
								</offlineLink>
								<!-- Test Direct -->
								<offlineLink>
									<url>https://commons.apache.org/proper/commons-bcel/apidocs/</url>
									<location>${project.build.directory}/offlineLinks/org.apache.bcel/bcel</location>
								</offlineLink>
								<offlineLink>
									<url>https://junit.org/junit4/javadoc/latest/</url>
									<location>${project.build.directory}/offlineLinks/junit/junit</location>
								</offlineLink>
							</offlineLinks>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<!-- Direct -->
			<dependency>
				<groupId>com.aoapps</groupId><artifactId>ao-collections</artifactId><version>2.0.0${POST-SNAPSHOT}</version>
			</dependency>
			<dependency>
				<groupId>com.aoapps</groupId><artifactId>ao-encoding</artifactId><version>5.0.1-SNAPSHOT<!-- ${POST-SNAPSHOT} --></version>
			</dependency>
			<dependency>
				<groupId>com.aoapps</groupId><artifactId>ao-hodgepodge</artifactId><version>5.0.0${POST-SNAPSHOT}</version>
			</dependency>
			<dependency>
				<groupId>com.aoapps</groupId><artifactId>ao-lang</artifactId><version>5.0.0${POST-SNAPSHOT}</version>
			</dependency>
			<!-- Transitive -->
			<dependency>
				<groupId>com.aoapps</groupId><artifactId>ao-tempfiles</artifactId><version>3.0.0${POST-SNAPSHOT}</version>
			</dependency>
			<!-- Test Direct -->
			<dependency>
				<groupId>org.apache.bcel</groupId><artifactId>bcel</artifactId><version>6.5.0</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId><artifactId>junit</artifactId><version>4.13.2</version>
			</dependency>
			<!-- Test Transitive -->
			<dependency>
				<groupId>org.hamcrest</groupId><artifactId>hamcrest</artifactId><version>2.2</version>
			</dependency>
			<dependency>
				<!-- Shim for junit 4.13.2 -->
				<groupId>org.hamcrest</groupId><artifactId>hamcrest-core</artifactId><version>2.2</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Direct -->
		<dependency>
			<groupId>com.aoapps</groupId><artifactId>ao-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>com.aoapps</groupId><artifactId>ao-encoding</artifactId>
		</dependency>
		<dependency>
			<groupId>com.aoapps</groupId><artifactId>ao-hodgepodge</artifactId>
		</dependency>
		<dependency>
			<groupId>com.aoapps</groupId><artifactId>ao-lang</artifactId>
		</dependency>
		<!-- Test Direct -->
		<dependency>
			<groupId>org.apache.bcel</groupId><artifactId>bcel</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId><artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
